@inherits LayoutComponentBase

@using Jija.Models;
@using Jija.Services
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity

@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject StateChangedService StateChangedService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <nav class="navbar topline">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

        <div class="row" id="navbarSupportedContent">
                <AuthorizeView>
                    <Authorized>
                        <a class="std-button" href="/account/profile">@context.User.Identity.Name<span class="sr-only">(current)</span></a>
                        <a class="std-button" href="/" @onclick="LogOut">Sign Out<span class="sr-only">(current)</span></a>
                    </Authorized>
                    <NotAuthorized>
                        <a class="std-button" href="/account/login">Sign In</a>
                        <a class="register-button" href="/account/register">Sign Up</a>
                    </NotAuthorized>
                </AuthorizeView>
        </div>

    </nav>

    <div class="content px-4">
        @Body
    </div>

    @code {
        private async Task LogOut()
        {
            await localStorage.RemoveItemAsync("token");
            StateChangedService.SetAuthenticationState(Task.FromResult(new AuthenticationState(new ClaimsPrincipal(new ClaimsIdentity()))));
            StateChangedService.NotifyStateChanged();
        }
    }

</div>