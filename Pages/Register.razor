@page "/account/register"

@using Jija.Models
@using Microsoft.AspNetCore.Identity

@inject UserManager<User> UserManager
@inject NavigationManager NavigationManager


<EditForm Model="@registerForm" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <InputText class="form-control" id="inputUserName" placeholder="username" @bind-Value="registerForm.UserName" />
    </div>
    <div class="form-group">
        <InputText class="form-control" id="inputEmail" placeholder="e-mail" @bind-Value="registerForm.Email" />
    </div>
    <div class="form-group">
        <InputText type="password" class="form-control" id="inputPassword" placeholder="password" @bind-Value="registerForm.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

<div class="mt-3">
    @foreach (var error in errors)
    {
        <p>@error.Description</p>
    }
</div>

@code {
    private RegisterForm registerForm = new RegisterForm();
    private List<IdentityError> errors = new List<IdentityError>();

    private async Task HandleValidSubmit()
    {
        var user = new User {
            UserName=registerForm.UserName,
            Email=registerForm.Email,
        };

        var result = await UserManager.CreateAsync(user, registerForm.Password);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("account/login");
        }
        else
        {
            errors.Clear();
            errors.AddRange(result.Errors);
        }
    }
}