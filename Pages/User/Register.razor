@page "/account/register"

@using Jija.Models
@using Jija.Models.Account
@using Jija.Models.Github
@using Microsoft.AspNetCore.Identity

@inject UserManager<User> UserManager
@inject DatabaseContext DatabaseContext
@inject NavigationManager NavigationManager



 
<div class="register">
    <div class="login_header">
        <h1>Create your account</h1>
    </div>
    <EditForm Model="@registerForm" OnValidSubmit="@OnValidSubmit" class="login_border">
    <DataAnnotationsValidator />
    <ValidationSummary />
        <label class="login_text">Username</label>
        <div class="form-group">
            <InputText class="form-control" id="inputUserName" placeholder="username" @bind-Value="registerForm.UserName" />
        </div>
        <label class="login_text">Email</label>
        <div class="form-group">
            <InputText class="form-control" id="inputEmail" placeholder="e-mail" @bind-Value="registerForm.Email" />
        </div>
        <label class="login_text">Password</label>
        <div class="form-group">
            <InputText type="password" class="form-control" id="inputPassword" placeholder="password" @bind-Value="registerForm.Password" />
        </div>
        <button type="submit" class="btn btn-success" style="width: 100%;">Register</button>
    </EditForm>
</div>

<div class="mt-3">
    @foreach (var error in errors)
    {
        <p>@error.Description</p>
    }
</div>

@code {
    private RegisterForm registerForm = new RegisterForm();
    private List<IdentityError> errors = new List<IdentityError>();

    private async Task OnValidSubmit()
    {
        var user = new User {
            UserName=registerForm.UserName,
            Email=registerForm.Email,
        };

        var result = await UserManager.CreateAsync(user, registerForm.Password);

        if (result.Succeeded)
        {
            var githubUser = new GithubUser {User = user};

            await DatabaseContext.GithubUsers.AddAsync(githubUser);
            await DatabaseContext.SaveChangesAsync();
            
            NavigationManager.NavigateTo("account/login");
        }
        
    else
            errors = new List<IdentityError>(result.Errors);
    }
}